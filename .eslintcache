[{"C:\\Users\\Jesús\\Desktop\\ga_site\\Learning\\Learning React\\BattleShip\\src\\index.js":"1","C:\\Users\\Jesús\\Desktop\\ga_site\\Learning\\Learning React\\BattleShip\\src\\App.js":"2","C:\\Users\\Jesús\\Desktop\\ga_site\\Learning\\Learning React\\BattleShip\\src\\reportWebVitals.js":"3","C:\\Users\\Jesús\\Desktop\\ga_site\\Learning\\Learning React\\BattleShip\\src\\HomePage.js":"4","C:\\Users\\Jesús\\Desktop\\ga_site\\Learning\\Learning React\\BattleShip\\src\\components\\ShipDrag.js":"5","C:\\Users\\Jesús\\Desktop\\ga_site\\Learning\\Learning React\\BattleShip\\src\\components\\GameBoard.js":"6","C:\\Users\\Jesús\\Desktop\\ga_site\\Learning\\Learning React\\BattleShip\\src\\components\\Header.js":"7","C:\\Users\\Jesús\\Desktop\\ga_site\\Learning\\Learning React\\BattleShip\\src\\components\\Winner.js":"8","C:\\Users\\Jesús\\Desktop\\ga_site\\Learning\\Learning React\\BattleShip\\src\\components\\battleStart.js":"9","C:\\Users\\Jesús\\Desktop\\ga_site\\Learning\\Learning React\\BattleShip\\src\\GameController.js":"10"},{"size":520,"mtime":1613948237320,"results":"11","hashOfConfig":"12"},{"size":1169,"mtime":1618015031547,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":841,"mtime":1615086694069,"results":"15","hashOfConfig":"12"},{"size":7718,"mtime":1618013205966,"results":"16","hashOfConfig":"12"},{"size":7962,"mtime":1618016903960,"results":"17","hashOfConfig":"12"},{"size":0,"mtime":1614300464303,"results":"18","hashOfConfig":"12"},{"size":772,"mtime":1615716145401,"results":"19","hashOfConfig":"12"},{"size":17057,"mtime":1615926228705,"results":"20","hashOfConfig":"12"},{"size":7048,"mtime":1618012203689,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"3cze",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"C:\\Users\\Jesús\\Desktop\\ga_site\\Learning\\Learning React\\BattleShip\\src\\index.js",[],["47","48"],"C:\\Users\\Jesús\\Desktop\\ga_site\\Learning\\Learning React\\BattleShip\\src\\App.js",["49"],"import {useState} from \"react\"\nimport HomePage from \"./HomePage\"\nimport GameController from \"./GameController\"\nimport logo from \"./assets/images/bs_logo.png\"\nimport music from \"./assets/sounds/music.mp3\"\nimport backgroundMusic from \"./assets/sounds/background_sound.mp3\"\n\nfunction App() {\n  const [player,setPlayer]=useState(\"\")\n  const [gameStart,setGameStart]=useState(false)\n  const [battleStart,setBattleStart]=useState(false)\n  return (\n        <div className=\"bg-dark\" >\n          {player&&!battleStart&&<audio autoPlay src={music}></audio>}\n          {battleStart&&<audio autoPlay onEnded={(e)=>e.target.play()} src={backgroundMusic}></audio>}\n          <header className=\"container-fluid bg-dark text-center text-white p-3\">\n              <img className={gameStart?`smallLogo`:\"bigLogo\"} src={logo} alt=\"\"/>\n          </header>\n          {!gameStart ?\n          <HomePage setPlayer={setPlayer} setGameStart={setGameStart} player={player} />:\n          <GameController  setGameStart={setGameStart} setBattleStart={setBattleStart} player={player} battleStart={battleStart} setBattleStart={setBattleStart} />}\n          </div>\n        \n  );\n}\n\nexport default App;\n","C:\\Users\\Jesús\\Desktop\\ga_site\\Learning\\Learning React\\BattleShip\\src\\reportWebVitals.js",[],"C:\\Users\\Jesús\\Desktop\\ga_site\\Learning\\Learning React\\BattleShip\\src\\HomePage.js",[],"C:\\Users\\Jesús\\Desktop\\ga_site\\Learning\\Learning React\\BattleShip\\src\\components\\ShipDrag.js",["50","51","52","53"],"import { useEffect,useState } from \"react\"\r\n\r\n\r\n\r\nconst Ships=({ setElDrag,initialCells,ships,setShips,setBattleStart,IACells,setIACells,setPlayerCells,playerCells})=>{\r\n    const [IACellShip,setIACellShip]=useState([])\r\n    const [playerRandomShip,setPlayerRandomShip]=useState([])\r\n    const [activeRandom,setActiveRandom]=useState(false)\r\n    const handleDrag=(e)=>{\r\n        setElDrag(e.target.id)\r\n        e.dataTransfer.setDragImage(e.target, 0, 0);\r\n    }\r\n    const handleDragEnd=()=>{\r\n        setElDrag(null)\r\n    } \r\n    const checkCollisions=(locationArray)=>{\r\n        const collisions = [9, 19, 29, 39, 49, 59, 69, 79, 89];\r\n        if(!activeRandom){\r\n            if (locationArray.some((loc) => !IACells[loc])) {\r\n                return false;\r\n            }else if (locationArray.some((loc) => IACells[loc].hasShip)) {\r\n                return false;\r\n            }else if(\r\n                collisions.some((num) => {\r\n                return [num, num + 1].every((combination) =>\r\n                    locationArray.includes(combination)\r\n                ); \r\n            })\r\n            ) {\r\n                return false;\r\n            }else{\r\n                return true;\r\n            }\r\n        }else{\r\n            if (locationArray.some((loc) => !playerCells[loc])) {\r\n                return false;\r\n            }else if (locationArray.some((loc) => playerCells[loc].hasShip)) {\r\n                return false;\r\n            }else if(\r\n                collisions.some((num) => {\r\n                return [num, num + 1].every((combination) =>\r\n                    locationArray.includes(combination)\r\n                );\r\n            })\r\n            ) {\r\n                return false;\r\n            }else{\r\n                return true;\r\n            }\r\n        }\r\n    } \r\n    const randomShips=(shipLength,player)=>{\r\n        let dir=[\"row\",\"col\"][Math.floor(Math.random()*2)]\r\n        let possLoc=[]\r\n        for (let i = 0; i < 100; i++) {\r\n            let locationArray=[];\r\n            if(dir===\"row\"){\r\n                for (let count = 0; count < shipLength; count++) {\r\n                    locationArray.push(i+count)\r\n                }\r\n            }else{\r\n                for (let count = 0; count < shipLength; count++) {\r\n                    locationArray.push(i+count*10)  \r\n                }\r\n            }\r\n            if (checkCollisions(locationArray,player)) {\r\n                possLoc.push(locationArray);\r\n            }\r\n        }\r\n        return possLoc[\r\n            Math.floor(Math.random() * possLoc.length)\r\n        ];\r\n       \r\n    }  \r\n  \r\n    useEffect(()=>{\r\n            if(IACellShip.length===0){\r\n               setIACellShip([...IACellShip,randomShips(2)])\r\n            }else if(IACellShip.length===1){\r\n                setIACellShip([...IACellShip,randomShips(3,\"IA\")])\r\n                \r\n            } else if(IACellShip.length===2){\r\n                setIACellShip([...IACellShip,randomShips(4,\"IA\")])\r\n               \r\n            }else if(IACellShip.length===3){\r\n                setIACellShip([...IACellShip,randomShips(5,\"IA\")])\r\n            }\r\n        \r\n    },[IACells])\r\n    useEffect(()=>{\r\n        if(IACellShip.length===1){\r\n            setIACells(IACells.map((el,i)=>{\r\n                if(i===IACellShip[0][0] ||i===IACellShip[0][1]){\r\n                return {...el,hasShip:true,type:\"patrol\"} \r\n                }else{\r\n                return el\r\n                }}))\r\n        }else if(IACellShip.length===2){\r\n            setIACells(IACells.map((el,i)=>{\r\n                if(i===IACellShip[1][0]||i===IACellShip[1][1]||i===IACellShip[1][2]){\r\n                    return {...el,hasShip:true,type:\"destroyer\"}\r\n                }else{\r\n                return el\r\n                }}))\r\n        }else if(IACellShip.length===3){\r\n            setIACells(IACells.map((el,i)=>{\r\n                if(i===IACellShip[2][0]||i===IACellShip[2][1]||i===IACellShip[2][2]||i===IACellShip[2][3]){\r\n                    return {...el,hasShip:true,type:\"submarine\"}\r\n                }else{\r\n                return el\r\n                }}))\r\n        }else if(IACellShip.length===4){\r\n            setIACells(IACells.map((el,i)=>{\r\n                if(i===IACellShip[3][0]||i===IACellShip[3][1]||i===IACellShip[3][2]||i===IACellShip[3][3]||i===IACellShip[3][4]){\r\n                    return {...el,hasShip:true,type:\"carrier\"}\r\n                }else{\r\n                return el\r\n                }}))\r\n        }\r\n    },[IACellShip])\r\n\r\n    useEffect(()=>{\r\n        if(activeRandom){\r\n            if(playerRandomShip.length===0){\r\n            setPlayerRandomShip([...playerRandomShip,randomShips(2)])\r\n            }else if(playerRandomShip.length===1){\r\n                setPlayerRandomShip([...playerRandomShip,randomShips(3)])\r\n                \r\n            } else if(playerRandomShip.length===2){\r\n                setPlayerRandomShip([...playerRandomShip,randomShips(4)])\r\n            \r\n            }else if(playerRandomShip.length===3){\r\n                setPlayerRandomShip([...playerRandomShip,randomShips(5)])\r\n            }\r\n        }\r\n    },[playerCells,activeRandom])\r\nuseEffect(()=>{\r\n    if(playerRandomShip.length===1){\r\n        setPlayerCells(playerCells.map((el,i)=>{\r\n            if(i===playerRandomShip[0][0] ||i===playerRandomShip[0][1]){\r\n            return {...el,hasShip:true,type:\"patrol\"} \r\n            }else{\r\n            return el\r\n            }}))\r\n    }else if(playerRandomShip.length===2){\r\n        setPlayerCells(playerCells.map((el,i)=>{\r\n            if(i===playerRandomShip[1][0]||i===playerRandomShip[1][1]||i===playerRandomShip[1][2]){\r\n                return {...el,hasShip:true,type:\"destroyer\"}\r\n            }else{\r\n            return el\r\n            }}))\r\n    }else if(playerRandomShip.length===3){\r\n        setPlayerCells(playerCells.map((el,i)=>{\r\n            if(i===playerRandomShip[2][0]||i===playerRandomShip[2][1]||i===playerRandomShip[2][2]||i===playerRandomShip[2][3]){\r\n                return {...el,hasShip:true,type:\"submarine\"}\r\n            }else{\r\n            return el\r\n            }}))\r\n    }else if(playerRandomShip.length===4){\r\n        setPlayerCells(playerCells.map((el,i)=>{\r\n            if(i===playerRandomShip[3][0]||i===playerRandomShip[3][1]||i===playerRandomShip[3][2]||i===playerRandomShip[3][3]||i===playerRandomShip[3][4]){\r\n                return {...el,hasShip:true,type:\"carrier\"}\r\n            }else{\r\n            return el\r\n            }}))\r\n    }\r\n},[playerRandomShip])\r\n    \r\n    const handleClick=()=>{\r\n        setPlayerCells(playerCells.map(el=>(el.notAllowed===true ?{...el,notAllowed:false}:el)));setBattleStart(true);\r\n    } \r\n    const handleRandom=()=>{\r\n        setPlayerCells(initialCells)\r\n        setActiveRandom(true)\r\n        setShips([])\r\n\r\n    }\r\n    const handleDragClick=(e)=>{\r\n        setElDrag(e.target.id)\r\n    } \r\n    return(\r\n        <div  className=\"img\">\r\n            {!activeRandom&&<div className=\"text-center \">\r\n                <button onClick={handleRandom} className=\"btn btn-lg  mt-2 cos-shadow btn-outline-warning\">Random position 🚢 </button>\r\n            </div>}\r\n            {ships.map((el)=>(\r\n                <div className=\"container shipImg\" key={el.id}>\r\n                    <img   className=\"mt-3  float-shadow\" id={`${el.id}`} src={el.type} onClick={handleDragClick} onDragStartCapture={handleDrag} onDragEndCapture={handleDragEnd} alt=\"A carrier\" />\r\n                </div>)\r\n            )}\r\n            {ships.length===0 &&\r\n            <div className=\"text-center mt-5\">\r\n                <button onClick={handleClick} className=\"btn btn-lg cos-shadow btn-outline-warning\">Start  Battle 💣  </button>\r\n\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Ships;","C:\\Users\\Jesús\\Desktop\\ga_site\\Learning\\Learning React\\BattleShip\\src\\components\\GameBoard.js",["54"],"C:\\Users\\Jesús\\Desktop\\ga_site\\Learning\\Learning React\\BattleShip\\src\\components\\Header.js",[],"C:\\Users\\Jesús\\Desktop\\ga_site\\Learning\\Learning React\\BattleShip\\src\\components\\Winner.js",[],"C:\\Users\\Jesús\\Desktop\\ga_site\\Learning\\Learning React\\BattleShip\\src\\components\\battleStart.js",["55","56","57"],"import {useEffect,useState} from \"react\"\r\nimport Typewriter from \"typewriter-effect\"; \r\n\r\nimport WinnerPage from \"./Winner\"\r\nimport GameBoard from \"./GameBoard\"\r\n\r\nimport nazi from \"../assets/images/nazi.jfif\"\r\nimport unitedKingdom from \"../assets/images/united.jfif\" \r\nimport hitShot from \"../assets/sounds/shot_hit.mp3\"\r\nimport missShot from \"../assets/sounds/shot_miss.mp3\"\r\nimport heilHitler from \"../assets/sounds/heilHitler.m4a\"\r\n\r\nconst PlayerRemainingShips=[\"carrier\",\"submarine\",\"destroyer\",\"patrol\"]\r\nconst iARemainingShips=[\"carrier\",\"submarine\",\"destroyer\",\"patrol\"]\r\n\r\n\r\nconst BattleStart=({player,IACells,setIACells,playerCells,setPlayerCells,battleStart,setShips,ships,dir,elDrag,setBattleStart,setGameStart,carrier,destroyer,patrol,submarine})=>{\r\n    const [IAAccurracy,setIAAccurracy]=useState(0)\r\n    const [playerAccurracy,setPlayerAccurracy]=useState(0)\r\n    const [unSunkShots,setUnSunkShots]=useState([])\r\n    const [actualType,setActualType]=useState(\"\")\r\n    const [playerRemainingShips,setPlayerRemainingShips]=useState(PlayerRemainingShips)\r\n    const [IARemainingShips,setIARemainingShips]=useState(iARemainingShips)\r\n    const [winner,setWinner]=useState(\"\")\r\n    const [playerMessage,setPlayerMessage]=useState(`Make the first shot Admiral ${player}`)\r\n    const [IAmessage,setIAmessage]=useState(`Enemy is waiting for your shot`)\r\n    const [turn,setTurn]=useState(0)\r\n    const [clickAllow,setClickAllow]=useState(true)\r\n    const [playerReplay,setPlayerReplay]=useState(true)\r\n    const [IAreplay,setIAreplay]=useState(true)\r\n    const [hitAudio,setHitAudio]=useState(false)\r\n    const [missAudio,setMissAudio]=useState(false)\r\n    const [hideStatus,setHideStatus]=useState(false)\r\n\r\n    useEffect(()=>{\r\n        setPlayerReplay(false)\r\n        setTimeout(()=>{\r\n            setIAreplay(false)\r\n        },4000)\r\n        \r\n    },[turn])\r\n    useEffect(()=>{\r\n        if(!clickAllow){\r\n            setTimeout(()=>{\r\n                setClickAllow(true)\r\n            },7000)\r\n        }        \r\n    },[clickAllow])\r\n    useEffect(()=>{\r\n        if(!playerReplay) setPlayerReplay(true)\r\n        if(!IAreplay) setIAreplay(true)\r\n    },[playerReplay,IAreplay])\r\n\r\n    const handleShot=(shot)=>{\r\n        if(!clickAllow) return\r\n        setClickAllow(false)\r\n    setTurn(turn+1)\r\n    if(IACells[shot].hasShip){\r\n        setHitAudio(true)\r\n        setPlayerMessage(\"You take a shot... BOOM!😎\")\r\n        setIACells(IACells.map((el,index)=>(\r\n            index===shot ?{...el,isShot:true} : el\r\n        )))\r\n    }else{ \r\n        setMissAudio(true)\r\n        setPlayerMessage(\"You take a shot... MISS🤕\")\r\n        setIACells(IACells.map((el,index)=>(\r\n            index===shot ?{...el,notAllowed:true} : el\r\n        )))\r\n    }\r\n\r\n    //IA Guess\r\n    setTimeout(()=>{\r\n        let IAguessShot=Math.floor(Math.random()*100)\r\n        while(playerCells[IAguessShot].notAllowed||playerCells[IAguessShot].isShot){\r\n            IAguessShot=Math.floor(Math.random()*100);\r\n        }\r\n        if(unSunkShots.length===1){\r\n            IAguessShot=[unSunkShots[0]+10,unSunkShots[0]+1,unSunkShots[0]-1,unSunkShots[0]-10][Math.floor(Math.random()*4)]\r\n            while(!playerCells[IAguessShot]||(playerCells[IAguessShot].type&&playerCells[IAguessShot].type!==actualType)||playerCells[IAguessShot].notAllowed||playerCells[IAguessShot].isShot){\r\n                IAguessShot=[unSunkShots[0]+10,unSunkShots[0]+1,unSunkShots[0]-1,unSunkShots[0]-10][Math.floor(Math.random()*4)]\r\n            }\r\n        }else if(unSunkShots.length===2){\r\n           if( unSunkShots[0]+1===unSunkShots[1]){\r\n               IAguessShot=[unSunkShots[0]-1,unSunkShots[1]+1][Math.floor(Math.random()*2)]\r\n               while(!playerCells[IAguessShot]||(playerCells[IAguessShot].type&&playerCells[IAguessShot].type!==actualType)||playerCells[IAguessShot].notAllowed||playerCells[IAguessShot].isShot){\r\n                    IAguessShot=[unSunkShots[0]-1,unSunkShots[1]+1][Math.floor(Math.random()*2)]\r\n                    \r\n                }\r\n           }else if(unSunkShots[0]+10===unSunkShots[1]){\r\n               IAguessShot=[unSunkShots[0]-10,unSunkShots[1]+10][Math.floor(Math.random()*2)]\r\n               while(!playerCells[IAguessShot]||(playerCells[IAguessShot].type&&playerCells[IAguessShot].type!==actualType)||playerCells[IAguessShot].notAllowed||playerCells[IAguessShot].isShot){\r\n                IAguessShot=[unSunkShots[0]-10,unSunkShots[1]+10][Math.floor(Math.random()*2)]\r\n               }\r\n           }\r\n        }else if(unSunkShots.length===3){\r\n            if(unSunkShots[0]+1===unSunkShots[1]){\r\n                IAguessShot=[unSunkShots[2]+1,unSunkShots[0]-1][Math.floor(Math.random()*2)]\r\n                while(!playerCells[IAguessShot]||(playerCells[IAguessShot].type&&playerCells[IAguessShot].type!==actualType)||playerCells[IAguessShot].notAllowed||playerCells[IAguessShot].isShot){\r\n                    IAguessShot=[unSunkShots[2]+1,unSunkShots[0]-1][Math.floor(Math.random()*2)]\r\n                }\r\n            }else if(unSunkShots[0]+10===unSunkShots[1]){\r\n                IAguessShot=[unSunkShots[2]+10,unSunkShots[0]-10][Math.floor(Math.random()*2)]\r\n                while(!playerCells[IAguessShot]||(playerCells[IAguessShot].type&&playerCells[IAguessShot].type!==actualType)||playerCells[IAguessShot].notAllowed||playerCells[IAguessShot].isShot){\r\n                    IAguessShot=[unSunkShots[2]+10,unSunkShots[0]-10][Math.floor(Math.random()*2)]\r\n                }\r\n            }\r\n        }else if(unSunkShots.length===4){\r\n            if(unSunkShots[0]+1===unSunkShots[1]){\r\n                IAguessShot=[unSunkShots[3]+1,unSunkShots[0]-1][Math.floor(Math.random()*2)]\r\n                while(!playerCells[IAguessShot]||(playerCells[IAguessShot].type&&playerCells[IAguessShot].type!==actualType)||playerCells[IAguessShot].notAllowed||playerCells[IAguessShot].isShot){\r\n                    IAguessShot=[unSunkShots[3]+1,unSunkShots[0]-1][Math.floor(Math.random()*2)]\r\n                }\r\n            }else if(unSunkShots[0]+10===unSunkShots[1]){\r\n                IAguessShot=[unSunkShots[3]+10,unSunkShots[0]-10][Math.floor(Math.random()*2)]\r\n                while(!playerCells[IAguessShot]||playerCells[IAguessShot].notAllowed||playerCells[IAguessShot].isShot||(playerCells[IAguessShot].type&&playerCells[IAguessShot].type!==actualType)){\r\n                    IAguessShot=[unSunkShots[3]+10,unSunkShots[0]-10][Math.floor(Math.random()*2)]\r\n                }\r\n            }\r\n        }\r\n        if(playerCells[IAguessShot].hasShip){\r\n            setHitAudio(true)\r\n            if(unSunkShots.length===0) setActualType(playerCells[IAguessShot].type)\r\n            setIAmessage(\"Enemy take a shot... BOOM!🤕\")\r\n            setUnSunkShots([...unSunkShots,IAguessShot].sort())\r\n            setPlayerCells(playerCells.map((el,index)=>(\r\n                index===IAguessShot ?{...el,isShot:true} : el\r\n            )))\r\n        }else{\r\n            setMissAudio(true)  \r\n            setIAmessage(\"Enemy take a shot... MISS😎\")\r\n            setPlayerCells(playerCells.map((el,index)=>(\r\n                index===IAguessShot ?{...el,notAllowed:true} : el\r\n            )))\r\n        }\r\n    },4000)\r\n    \r\n}\r\nuseEffect(()=>{\r\n   if(battleStart){\r\n    let carrierCount=0;\r\n    let submarCount=0;\r\n    let destroyerCount=0;\r\n    let patrolCount=0;\r\n        playerCells.forEach((el)=>{\r\n            if(el.isShot){\r\n                if(playerRemainingShips.includes(\"carrier\") && el.type===\"carrier\") carrierCount++\r\n                if(playerRemainingShips.includes(\"destroyer\") && el.type===\"destroyer\") destroyerCount++\r\n                if(playerRemainingShips.includes(\"patrol\") && el.type===\"patrol\") patrolCount++\r\n                if(playerRemainingShips.includes(\"submarine\") &&el.type===\"submarine\") submarCount++\r\n            }\r\n        })\r\n        if(carrierCount===5){\r\n            setPlayerRemainingShips(playerRemainingShips.filter(el=>{\r\n                return el !==\"carrier\"\r\n            }))\r\n            setPlayerCells(playerCells.map(el=>(\r\n                el.type===\"carrier\" ?{...el,isSunk:true} : el\r\n            )))\r\n            setIAmessage(\"Enemy take a shot... 😱They sunk your carrier\")\r\n            setUnSunkShots([])\r\n        }else if(submarCount===4){\r\n            setPlayerRemainingShips(playerRemainingShips.filter(el=>{\r\n                return el !==\"submarine\"\r\n            }))\r\n            setPlayerCells(playerCells.map(el=>(\r\n                el.type===\"submarine\" ?{...el,isSunk:true} : el\r\n            )))\r\n            setIAmessage(\"Enemy take a shot... 😱They sunk your submarine\")\r\n            setUnSunkShots([])\r\n        }else if(destroyerCount===3){\r\n            setPlayerRemainingShips(playerRemainingShips.filter(el=>{\r\n                return el !==\"destroyer\"\r\n            }))  \r\n            setIAmessage(\"Enemy take a shot... 😱They sunk your destroyer\")\r\n            setPlayerCells(playerCells.map(el=>(\r\n                el.type===\"destroyer\" ?{...el,isSunk:true} : el\r\n            )))\r\n            setUnSunkShots([])\r\n        }else if(patrolCount===2){\r\n            setPlayerRemainingShips(playerRemainingShips.filter(el=>{\r\n                return el !==\"patrol\"\r\n            }))\r\n            setIAmessage(\"Enemy take a shot... 😱They sunk your patrol\")\r\n            setPlayerCells(playerCells.map(el=>(\r\n                el.type===\"patrol\" ?{...el,isSunk:true} : el\r\n            )))\r\n            setUnSunkShots([])\r\n        }\r\n        if(turn!==0){\r\n            let IAAcCount=0\r\n            playerCells.forEach(el=>{\r\n                el.isShot && IAAcCount++\r\n            })\r\n            \r\n            setIAAccurracy((IAAcCount*100/(turn)).toFixed(0))\r\n\r\n        }   \r\n    }   \r\n},[playerCells])\r\n\r\nuseEffect(()=>{\r\n   if(battleStart){\r\n    let carrierCount=0;\r\n    let submarCount=0;\r\n    let destroyerCount=0;\r\n    let patrolCount=0;\r\n    IACells.forEach((el)=>{\r\n        if(el.isShot){\r\n            if(IARemainingShips.includes(\"carrier\") && el.type===\"carrier\") carrierCount++\r\n            if(IARemainingShips.includes(\"destroyer\") && el.type===\"destroyer\") destroyerCount++\r\n            if(IARemainingShips.includes(\"patrol\") &&el.type===\"patrol\") patrolCount++\r\n            if(IARemainingShips.includes(\"submarine\") &&el.type===\"submarine\") submarCount++\r\n        }\r\n    })\r\n    if(carrierCount===5) {\r\n        setIARemainingShips(IARemainingShips.filter(el=>{\r\n            return el !==\"carrier\"\r\n        })) \r\n        setPlayerMessage(\"You take a shot... 😂We sunk the enemy carrier!\")\r\n        setIACells(IACells.map(el=>(\r\n            el.type===\"carrier\" ?{...el,isSunk:true} : el\r\n        )))\r\n    }else if(destroyerCount===3){\r\n        setIARemainingShips(IARemainingShips.filter(el=>{\r\n            return el !==\"destroyer\"\r\n        }))\r\n        setPlayerMessage(\"You take a shot... 😂We sunk the enemy destroyer!\")\r\n        setIACells(IACells.map(el=>(\r\n            el.type===\"destroyer\" ?{...el,isSunk:true} : el\r\n        )))\r\n    }else if(submarCount===4){\r\n        setIARemainingShips(IARemainingShips.filter(el=>{\r\n            return el !==\"submarine\"\r\n        }))\r\n        setPlayerMessage(\"You take a shot... 😂We sunk the enemy submarine!\")\r\n        setIACells(IACells.map(el=>(\r\n            el.type===\"submarine\" ?{...el,isSunk:true} : el\r\n        )))\r\n    }else if(patrolCount===2){\r\n        setIARemainingShips(IARemainingShips.filter(el=>{\r\n           return el !==\"patrol\"\r\n        }))\r\n        setPlayerMessage(\"You take a shot... 😂We sunk the enemy patrol!\")\r\n        setIACells(IACells.map(el=>(\r\n            el.type===\"patrol\" ?{...el,isSunk:true} : el\r\n        )))\r\n    } \r\n    if(turn!==0){\r\n            let playerAcCount=0\r\n            IACells.forEach(el=>{\r\n                el.isShot && playerAcCount++\r\n            })\r\n            setPlayerAccurracy((playerAcCount*100/(turn)).toFixed(0))\r\n        }\r\n    }\r\n},[IACells])\r\n\r\nuseEffect(()=>{\r\nIARemainingShips.length===0 && setWinner(`${player}`)\r\nplayerRemainingShips.length===0 && setWinner(`Nazis`)\r\n},[IARemainingShips,playerRemainingShips])\r\n\r\nuseEffect(()=>{\r\n    hitAudio&&\r\n    setTimeout(()=>{\r\n        setHitAudio(false)\r\n    },3000) \r\n    missAudio&&\r\n    setTimeout(()=>{\r\n        setMissAudio(false)\r\n    },3000) \r\n},[hitAudio,missAudio])\r\n    return(\r\n        \r\n        \r\n     <div>\r\n         {!winner?\r\n         <div className=\"battle container-fluid text-white text-shadow\">\r\n             <audio autoPlay src={heilHitler}></audio>\r\n            {missAudio&& <audio  autoPlay src={missShot}></audio>}\r\n            {hitAudio &&<audio  autoPlay src={hitShot}></audio>} \r\n        <div className=\"row\">\r\n                 <div className=\"col-lg-4 mb-2\">\r\n                     <h3 className=\"text-center\">{player}`s Fleet  <img style={{width:`2em`}} className=\"cos-shadow\" src={unitedKingdom} alt=\"a allied flag\"/></h3>\r\n                     <h5 className=\"msg text-warning text-center\">{playerReplay?<Typewriter  \r\n                        onInit={(typewriter)=> { \r\n                        typewriter \r\n                        .changeDelay(100)\r\n                        .typeString(playerMessage)\r\n                        .start(); \r\n                        }}\r\n                         />:\"Hello\"}\r\n                     </h5>\r\n                     <GameBoard player={\"human\"} battleStart={battleStart} setShips={setShips} ships={ships} dir={dir} cells={playerCells} setCells={setPlayerCells} elDrag={elDrag}  />\r\n                 </div>\r\n                 <div className=\"col-lg-4  text-warning\">\r\n                     <h3 className=\"text-center mt-5\">Status</h3>\r\n                     <h4 className=\"text-center\">Turn: <span className=\"text-white\">{turn}</span></h4>\r\n                     <div className=\"text-center\"><button onClick={()=>setHideStatus(!hideStatus)} className=\"col-4 mb-3 cos-shadow btn btn-outline-warning\">{hideStatus ? \"Show\" :\"Hide\"} Game status</button></div>\r\n                     <div style={{display:`${hideStatus ? \"none\":\"flex\"}`,marginLeft:\"35px\"}} className=\"statisc row\">\r\n                         <div className=\"col-6\">\r\n                             <h3 className=\"text-success text-center\">{player} <img style={{width:`1em`}} className=\"cos-shadow\" src={unitedKingdom} alt=\"a allied flag\"/></h3>\r\n                             <h4 className=\"text-success text-center\">Accurracy: <span className=\"text-white\">{playerAccurracy}%</span></h4>\r\n                             <h5 className=\"text-success text-center\">Remaining Ships:</h5>\r\n                             {playerRemainingShips.map((el,i)=>(\r\n                                 <div key={i} style={{marginLeft:\"20px\"}} className=\"text-white container\">\r\n                                      <img style={{height:\"1.5rem\"}}  className=\"cos-shadow mt-2\" src={el===\"carrier\"?carrier:el===\"destroyer\"?destroyer:el===\"patrol\"?patrol:el===\"submarine\"&&submarine} alt=\"a carrier\"/>\r\n                                     \r\n                                 </div>\r\n                             ))}\r\n                         </div>\r\n                         <div className=\"col-6\">\r\n                             <h3 className=\"text-danger\">Nazis  <img style={{width:`1em`}} className=\"cos-shadow\" src={nazi} alt=\"a nazi flag\"/></h3>\r\n                             <h4 className=\"text-danger w-100\">Accurracy: <span className=\"text-white\">{IAAccurracy} %</span></h4>\r\n                             <h5 className=\"text-danger\">Remaining Ships:</h5>\r\n                             {IARemainingShips.map((el,i)=>(\r\n                                 <div key={i} className=\"text-white\">\r\n                                     <div className=\"container-fluid\"><img style={{height:\"1.5rem\"}}  className=\"cos-shadow mt-2\" src={el===\"carrier\"?carrier:el===\"destroyer\"?destroyer:el===\"patrol\"?patrol:el===\"submarine\"&&submarine} alt=\"a carrier\"/></div>\r\n                                     </div>\r\n                             ))}\r\n                         </div>\r\n                     </div>\r\n                     \r\n                 </div>\r\n                 <div className=\"col-lg-4\">\r\n                     <h3 className=\"text-center\">Nazi`s Fleet  <img style={{width:`1.3em`}} className=\"cos-shadow\" src={nazi} alt=\"a nazi flag\"/> </h3>\r\n                     <h5 className=\"msg text-warning text-center\">{IAreplay?<Typewriter  \r\n                        onInit={(typewriter)=> { \r\n                        typewriter \r\n                        .changeDelay(100)\r\n                        .typeString(IAmessage)\r\n                        .start(); \r\n                        }}\r\n                         />:\"Hello\"}\r\n                     </h5>\r\n                     <GameBoard handleShot={handleShot} player={\"IA\"} battleStart={battleStart} setShips={setShips} ships={ships} dir={dir} cells={IACells} setCells={setIACells} elDrag={elDrag}  />\r\n                 </div>\r\n         </div>\r\n     </div>:<WinnerPage winner={winner} setBattleStart={setBattleStart} setGameStart={setGameStart} />}\r\n     </div>\r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default BattleStart;","C:\\Users\\Jesús\\Desktop\\ga_site\\Learning\\Learning React\\BattleShip\\src\\GameController.js",["58","59"],"import {useState,useEffect} from \"react\"\r\n\r\nimport Ships from \"./components/ShipDrag\"\r\nimport GameBoard from \"./components/GameBoard\"\r\nimport BattleStart from \"./components/battleStart\"\r\nimport \"./placeShip.css\"\r\n\r\n\r\nimport carrier from \"./assets/images/carrier.png\"\r\nimport destroyer from \"./assets/images/destroyer.png\"\r\nimport patrol from \"./assets/images/patrol.png\"\r\nimport submarine from \"./assets/images/submarine.png\"\r\n\r\nconst initialPlayerBoard=[];\r\nconst initialIABoard=[];\r\n\r\nfor (let i = 0; i < 100; i++) {\r\n    initialPlayerBoard.push({ hasShip: false,type:false,isShot: false,notAllowed:false});\r\n    initialIABoard.push({ hasShip: false,type:false,isShot: false,notAllowed:false});\r\n}\r\nconst initialShips=[\r\n    {\r\n     quantity:1,\r\n     type:carrier,\r\n     id:\"carrier\"\r\n    },\r\n    {\r\n        quantity:1,\r\n        type:submarine,\r\n        id:\"submarine\"\r\n    },\r\n    {\r\n        quantity:1,\r\n        type:destroyer,\r\n        id:\"destroyer\"\r\n    },\r\n    {\r\n        quantity:1,\r\n        type:patrol,\r\n        id:\"patrol\"\r\n    },\r\n]\r\n\r\n\r\nconst PlaceShip=({setBattleStart,battleStart,player,setGameStart})=>{\r\n        const [elDrag,setElDrag]=useState(null)\r\n        const [playerCells,setPlayerCells]=useState(initialPlayerBoard)\r\n        const [IACells,setIACells]=useState(initialIABoard)\r\n        const [dir,setDir]=useState(\"row\")\r\n        const [ships,setShips]=useState(initialShips)\r\n\r\n        \r\n\r\n        useEffect(()=>{\r\n            if(elDrag==null) return\r\n            let count=0;\r\n            let index=0;\r\n            setPlayerCells(playerCells.map((el,i)=>{\r\n                count++\r\n                index++\r\n               if(elDrag===\"carrier\"){\r\n                   if(dir===\"row\"){\r\n                        if(index===95) index=0\r\n                        if((count>6&&count<11)||playerCells[index+3].hasShip===true||playerCells[index+2].hasShip===true||playerCells[index+1].hasShip===true){\r\n                            if(count===10) count=0 \r\n                            return {...el,notAllowed:true}\r\n                        }else{\r\n                            return {...el,notAllowed:false}\r\n                        }\r\n                   }else{\r\n                        if(index===59) index=0\r\n                        if((count>59)||playerCells[index+39].hasShip===true||playerCells[index+29].hasShip===true||playerCells[index+19].hasShip===true||playerCells[index+9].hasShip===true){ \r\n                            return {...el,notAllowed:true}\r\n                        }else{\r\n                            return {...el,notAllowed:false}\r\n                        }\r\n                   }\r\n                }else if(elDrag===\"submarine\"){\r\n                    if(dir===\"row\"){\r\n                        if(index===96) index=0\r\n                        if((count>7&&count<11)||playerCells[index+2].hasShip===true||playerCells[index+1].hasShip===true){\r\n                            if(count===10) count=0 \r\n                            return {...el,notAllowed:true}\r\n                        }else{\r\n                            return {...el,notAllowed:false}\r\n                        }\r\n                    }else{\r\n                        if(index===69) index=0\r\n                        if((count>69)||playerCells[index+29].hasShip===true||playerCells[index+19].hasShip===true||playerCells[index+9].hasShip===true){ \r\n                            return {...el,notAllowed:true}\r\n                        }else{\r\n                            return {...el,notAllowed:false}\r\n                        }\r\n                    }\r\n                \r\n               }else if(elDrag===\"destroyer\") {\r\n                   if(dir===\"row\"){\r\n                        if(index===97) index=0\r\n                        if((count>8&&count<11)||playerCells[index+1].hasShip===true){\r\n                            if(count===10) count=0 \r\n                            return {...el,notAllowed:true}\r\n                        }else{\r\n                            return {...el,notAllowed:false}\r\n                        }\r\n                   }else{\r\n                        if(index===79) index=0\r\n                        if((count>79)||playerCells[index+19].hasShip===true||playerCells[index+9].hasShip===true){ \r\n                            return {...el,notAllowed:true}\r\n                        }else{\r\n                            return {...el,notAllowed:false}\r\n                        }\r\n                   }\r\n                \r\n               }else if(elDrag===\"patrol\") {\r\n                   if(dir===\"row\"){\r\n                        if(index===98) index=0\r\n                        if((count>=10&&count<11)||playerCells[index].hasShip===true){\r\n                            if(count===10) count=0 \r\n                            return {...el,notAllowed:true}\r\n                        }else{\r\n                            return {...el,notAllowed:false}\r\n                        }  \r\n                   }else{\r\n                        if(index===89) index=0\r\n                        if((count>89)||playerCells[index+9].hasShip===true){ \r\n                            return {...el,notAllowed:true}\r\n                        }else{\r\n                            return {...el,notAllowed:false}\r\n                        }\r\n                   }\r\n               }\r\n            }))\r\n        },[elDrag])\r\n       \r\n        return(\r\n            <div>\r\n            {!battleStart ?<div className=\"row text-white\">\r\n                <div className=\"col-lg-6\">\r\n                    <h3 className=\"text-white text-center mt-5\">Drag your ships to the board</h3>\r\n                    <div className=\"container\">\r\n                            <Ships initialCells={initialPlayerBoard}  initialShips={initialShips} IACells={IACells} setIACells={setIACells} playerCells={playerCells} setPlayerCells={setPlayerCells} setBattleStart={setBattleStart} setShips={setShips} ships={ships} carrier={carrier} submarine={submarine} destroyer={destroyer} patrol={patrol} setElDrag={setElDrag} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-6 mt-5\">\r\n                        <h3 className=\"text-white text-center\">GameBoard <button  onClick={()=>setDir(dir===\"row\" ? \"Column\" : \"row\")} className=\"btn cos-shadow btn-outline-warning text-center\">Change to {dir===\"row\" ? \"Columns\": \"Rows\"}</button></h3>\r\n                        <GameBoard setElDrag={setElDrag} setShips={setShips} ships={ships} dir={dir} cells={playerCells} setCells={setPlayerCells} elDrag={elDrag}  />\r\n                        \r\n                 </div>\r\n            \r\n            </div>:\r\n             <BattleStart submarine={submarine} patrol={patrol} destroyer={destroyer} carrier={carrier} setGameStart={setGameStart} setBattleStart={setBattleStart} elDrag={elDrag} dir={dir} ships={ships} setShips={setShips} battleStart={battleStart} player={player} IACells={IACells} playerCells={playerCells} setPlayerCells={setPlayerCells} setIACells={setIACells} />\r\n            \r\n            }\r\n            </div>\r\n        )\r\n        \r\n}\r\n\r\n\r\n\r\nexport default PlaceShip;",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":21,"column":130,"nodeType":"66","endLine":21,"endColumn":161},{"ruleId":"67","severity":1,"message":"68","line":89,"column":7,"nodeType":"69","endLine":89,"endColumn":16,"suggestions":"70"},{"ruleId":"67","severity":1,"message":"71","line":120,"column":7,"nodeType":"69","endLine":120,"endColumn":19,"suggestions":"72"},{"ruleId":"67","severity":1,"message":"73","line":136,"column":7,"nodeType":"69","endLine":136,"endColumn":33,"suggestions":"74"},{"ruleId":"67","severity":1,"message":"75","line":167,"column":3,"nodeType":"69","endLine":167,"endColumn":21,"suggestions":"76"},{"ruleId":"67","severity":1,"message":"77","line":133,"column":7,"nodeType":"69","endLine":133,"endColumn":14,"suggestions":"78"},{"ruleId":"67","severity":1,"message":"79","line":200,"column":3,"nodeType":"69","endLine":200,"endColumn":16,"suggestions":"80"},{"ruleId":"67","severity":1,"message":"81","line":257,"column":3,"nodeType":"69","endLine":257,"endColumn":12,"suggestions":"82"},{"ruleId":"67","severity":1,"message":"83","line":262,"column":3,"nodeType":"69","endLine":262,"endColumn":42,"suggestions":"84"},{"ruleId":"85","severity":1,"message":"86","line":58,"column":50,"nodeType":"87","messageId":"88","endLine":58,"endColumn":52},{"ruleId":"67","severity":1,"message":"89","line":133,"column":11,"nodeType":"69","endLine":133,"endColumn":19,"suggestions":"90"},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'IACellShip' and 'randomShips'. Either include them or remove the dependency array. You can also do a functional update 'setIACellShip(I => ...)' if you only need 'IACellShip' in the 'setIACellShip' call.","ArrayExpression",["93"],"React Hook useEffect has missing dependencies: 'IACells' and 'setIACells'. Either include them or remove the dependency array. If 'setIACells' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["94"],"React Hook useEffect has missing dependencies: 'playerRandomShip' and 'randomShips'. Either include them or remove the dependency array. You can also do a functional update 'setPlayerRandomShip(p => ...)' if you only need 'playerRandomShip' in the 'setPlayerRandomShip' call.",["95"],"React Hook useEffect has missing dependencies: 'playerCells' and 'setPlayerCells'. Either include them or remove the dependency array. If 'setPlayerCells' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["96"],"React Hook useEffect has missing dependencies: 'displayEffect' and 'setShips'. Either include them or remove the dependency array. If 'setShips' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["97"],"React Hook useEffect has missing dependencies: 'battleStart', 'playerRemainingShips', 'setPlayerCells', and 'turn'. Either include them or remove the dependency array. If 'setPlayerCells' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["98"],"React Hook useEffect has missing dependencies: 'IARemainingShips', 'battleStart', 'setIACells', and 'turn'. Either include them or remove the dependency array. If 'setIACells' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["99"],"React Hook useEffect has a missing dependency: 'player'. Either include it or remove the dependency array. If 'setWinner' needs the current value of 'player', you can also switch to useReducer instead of useState and read 'player' in the reducer.",["100"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'dir' and 'playerCells'. Either include them or remove the dependency array. You can also do a functional update 'setPlayerCells(p => ...)' if you only need 'playerCells' in the 'setPlayerCells' call.",["101"],"no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [IACellShip, IACells, randomShips]",{"range":"120","text":"121"},"Update the dependencies array to be: [IACellShip, IACells, setIACells]",{"range":"122","text":"123"},"Update the dependencies array to be: [playerCells, activeRandom, playerRandomShip, randomShips]",{"range":"124","text":"125"},"Update the dependencies array to be: [playerCells, playerRandomShip, setPlayerCells]",{"range":"126","text":"127"},"Update the dependencies array to be: [displayEffect, setShips, ships]",{"range":"128","text":"129"},"Update the dependencies array to be: [battleStart, playerCells, playerRemainingShips, setPlayerCells, turn]",{"range":"130","text":"131"},"Update the dependencies array to be: [IACells, IARemainingShips, battleStart, setIACells, turn]",{"range":"132","text":"133"},"Update the dependencies array to be: [IARemainingShips, player, playerRemainingShips]",{"range":"134","text":"135"},"Update the dependencies array to be: [dir, elDrag, playerCells]",{"range":"136","text":"137"},[3108,3117],"[IACellShip, IACells, randomShips]",[4445,4457],"[IACellShip, IACells, setIACells]",[5073,5099],"[playerCells, activeRandom, playerRandomShip, randomShips]",[6443,6461],"[playerCells, playerRandomShip, setPlayerCells]",[5675,5682],"[displayEffect, setShips, ships]",[9713,9726],"[battleStart, playerCells, playerRemainingShips, setPlayerCells, turn]",[11877,11886],"[IACells, IARemainingShips, battleStart, setIACells, turn]",[12020,12059],"[IARemainingShips, player, playerRemainingShips]",[5289,5297],"[dir, elDrag, playerCells]"]